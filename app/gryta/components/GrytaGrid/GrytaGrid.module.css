.gridContainer {
  position: relative;
  width: 100%;
  margin: 2rem 0;
  overflow: hidden;
}

.controls {
  position: absolute;
  bottom: 20px;
  right: 20px;
  z-index: 10;
  display: flex;
  gap: 8px;
  background-color: rgba(255, 255, 255, 0.7);
  padding: 8px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.controlButton {
  width: 36px;
  height: 36px;
  border: none;
  background-color: var(--primary-color, #333);
  color: white;
  font-size: 18px;
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease;
}

.controlButton:hover {
  background-color: var(--secondary-color, #555);
}

.grid {
  display: grid;
  gap: 4px;
  background-color: #f0f0f0;
  padding: 4px;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
}

.gridCell {
  position: relative;
  overflow: hidden;
  border-radius: 4px;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.gridCell:hover {
  transform: scale(1.02);
  z-index: 2;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.cellContent {
  position: relative;
  width: 100%;
  height: 100%;
}

.cellImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.cellOverlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
  padding: 8px;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.gridCell:hover .cellOverlay {
  opacity: 1;
}

.cellInfo {
  color: white;
  font-size: 12px;
}

.cellMember {
  display: block;
  font-weight: bold;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Focused Item Styles */
.focusedItemOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
}

.focusedItemContent {
  position: relative;
  max-width: 800px;
  max-height: 90vh;
  width: 90%;
  background-color: white;
  border-radius: 8px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.closeButton {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  font-size: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 2;
  transition: background-color 0.2s ease;
}

.closeButton:hover {
  background-color: rgba(0, 0, 0, 0.8);
}

.focusedItemImage {
  width: 100%;
  height: auto;
  max-height: 70vh;
  overflow: hidden;
}

.focusedItemImage img {
  width: 100%;
  height: auto;
  object-fit: contain;
}

.focusedItemInfo {
  padding: 20px;
}

.focusedItemDescription {
  font-size: 16px;
  margin-bottom: 10px;
  line-height: 1.5;
}

.focusedItemMeta {
  display: flex;
  justify-content: space-between;
  font-size: 14px;
  color: #666;
}

.focusedItemMember {
  font-weight: bold;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .focusedItemContent {
    width: 95%;
  }
  
  .focusedItemImage {
    max-height: 50vh;
  }
  
  .controls {
    bottom: 10px;
    right: 10px;
  }
  
  .controlButton {
    width: 32px;
    height: 32px;
    font-size: 16px;
  }
}

/* Loading animation */
.loader {
  border: 4px solid #f3f3f3;
  border-top: 4px solid var(--primary-color, #333);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
  margin: 0 auto 20px;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
